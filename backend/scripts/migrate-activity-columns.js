const { executeQuery } = require('../config/database');
const fs = require('fs');
const path = require('path');

async function migrateActivityColumns() {
    try {
        console.log('üöÄ D√©but de la migration des colonnes ActivityStatus et LastActivityTime...');
        
        // Lire le fichier SQL
        const sqlPath = path.join(__dirname, '../sql/migration_add_activity_columns.sql');
        const sqlContent = fs.readFileSync(sqlPath, 'utf8');
        
        // Diviser le contenu en requ√™tes individuelles
        const queries = sqlContent
            .split('GO')
            .map(q => q.trim())
            .filter(q => q.length > 0 && !q.startsWith('--') && !q.startsWith('USE'));
        
        // Ex√©cuter chaque requ√™te
        for (let i = 0; i < queries.length; i++) {
            const query = queries[i];
            if (query.trim()) {
                console.log(`üìù Ex√©cution de la requ√™te ${i + 1}/${queries.length}...`);
                try {
                    await executeQuery(query);
                    console.log(`‚úÖ Requ√™te ${i + 1} ex√©cut√©e avec succ√®s`);
                } catch (error) {
                    console.log(`‚ö†Ô∏è Requ√™te ${i + 1} - ${error.message}`);
                }
            }
        }
        
        console.log('üéâ Migration termin√©e avec succ√®s !');
        console.log('‚úÖ Les colonnes ActivityStatus et LastActivityTime ont √©t√© ajout√©es √† ABSESSIONS_OPERATEURS');
        
    } catch (error) {
        console.error('‚ùå Erreur lors de la migration:', error);
        process.exit(1);
    }
}

// Ex√©cuter la migration si le script est appel√© directement
if (require.main === module) {
    migrateActivityColumns()
        .then(() => {
            console.log('‚úÖ Migration termin√©e');
            process.exit(0);
        })
        .catch((error) => {
            console.error('‚ùå Erreur:', error);
            process.exit(1);
        });
}

module.exports = { migrateActivityColumns };




