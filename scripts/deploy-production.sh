#!/bin/bash

# Script de d√©ploiement pour SEDI Tablette - Production
# Ce script assure la coh√©rence des ports et rebuild complet

echo "üöÄ D√©ploiement SEDI Tablette - Production"
echo "========================================"

# V√©rifier qu'on est dans le bon r√©pertoire
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå Erreur: docker-compose.yml non trouv√©. √ätes-vous dans le bon r√©pertoire ?"
    exit 1
fi

echo "üìã √âtape 1: Arr√™t des services existants"
docker-compose -f docker-compose.yml down

echo "üìã √âtape 2: Suppression des conteneurs"
docker rm $(docker ps -aq) 2>/dev/null || true

echo "üìã √âtape 3: Suppression des images"
docker rmi $(docker images -q) 2>/dev/null || true

echo "üìã √âtape 4: Nettoyage des volumes orphelins"
docker volume prune -f

echo "üìã √âtape 5: Nettoyage des r√©seaux orphelins"
docker network prune -f

echo "üìã √âtape 6: Rebuild complet sans cache"
docker-compose -f docker-compose.yml build --no-cache

echo "üìã √âtape 7: D√©marrage des services"
docker-compose -f docker-compose.yml up -d

echo "üìã √âtape 8: Attente du d√©marrage"
sleep 10

echo "üìã √âtape 9: V√©rification des ports"
echo "Conteneurs en cours d'ex√©cution:"
docker ps

echo ""
echo "üìã √âtape 10: Tests de connectivit√©"
echo "Test backend direct (port 3001):"
curl -f http://localhost:3001/api/health 2>/dev/null && echo "‚úÖ Backend accessible" || echo "‚ùå Backend non accessible"

echo "Test frontend (port 8080):"
curl -f http://localhost:8080/health 2>/dev/null && echo "‚úÖ Frontend accessible" || echo "‚ùå Frontend non accessible"

echo "Test proxy API (frontend vers backend):"
curl -f http://localhost:8080/api/health 2>/dev/null && echo "‚úÖ Proxy API fonctionnel" || echo "‚ùå Proxy API non fonctionnel"

echo ""
echo "üéâ D√©ploiement termin√© !"
echo "Frontend: http://localhost:8080"
echo "Backend: http://localhost:3001"
echo "API via proxy: http://localhost:8080/api"
